// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: ml.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BookingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bookings []*Booking `protobuf:"bytes,1,rep,name=bookings,proto3" json:"bookings,omitempty"`
}

func (x *BookingRequest) Reset() {
	*x = BookingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingRequest) ProtoMessage() {}

func (x *BookingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingRequest.ProtoReflect.Descriptor instead.
func (*BookingRequest) Descriptor() ([]byte, []int) {
	return file_ml_proto_rawDescGZIP(), []int{0}
}

func (x *BookingRequest) GetBookings() []*Booking {
	if x != nil {
		return x.Bookings
	}
	return nil
}

type Booking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotel                       string `protobuf:"bytes,1,opt,name=hotel,proto3" json:"hotel,omitempty"`
	Leadtime                    int64  `protobuf:"varint,2,opt,name=leadtime,proto3" json:"leadtime,omitempty"`
	ArrivalDateYear             int64  `protobuf:"varint,3,opt,name=arrivalDateYear,proto3" json:"arrivalDateYear,omitempty"`
	ArrivalDateMonth            int64  `protobuf:"varint,4,opt,name=arrivalDateMonth,proto3" json:"arrivalDateMonth,omitempty"`
	ArrivalDateWeekNumber       int64  `protobuf:"varint,5,opt,name=arrivalDateWeekNumber,proto3" json:"arrivalDateWeekNumber,omitempty"`
	ArrivalDayOfMonth           int64  `protobuf:"varint,6,opt,name=arrivalDayOfMonth,proto3" json:"arrivalDayOfMonth,omitempty"`
	StaysInWeekendNights        int64  `protobuf:"varint,7,opt,name=staysInWeekendNights,proto3" json:"staysInWeekendNights,omitempty"`
	StaysInWeekNights           int64  `protobuf:"varint,8,opt,name=staysInWeekNights,proto3" json:"staysInWeekNights,omitempty"`
	Adults                      int64  `protobuf:"varint,9,opt,name=adults,proto3" json:"adults,omitempty"`
	Children                    int64  `protobuf:"varint,10,opt,name=children,proto3" json:"children,omitempty"`
	Babies                      int64  `protobuf:"varint,11,opt,name=babies,proto3" json:"babies,omitempty"`
	Meal                        string `protobuf:"bytes,12,opt,name=meal,proto3" json:"meal,omitempty"`
	Country                     string `protobuf:"bytes,13,opt,name=country,proto3" json:"country,omitempty"`
	MarketSegment               string `protobuf:"bytes,14,opt,name=marketSegment,proto3" json:"marketSegment,omitempty"`
	DistributionChannel         string `protobuf:"bytes,15,opt,name=distributionChannel,proto3" json:"distributionChannel,omitempty"`
	IsRepeatedGuest             bool   `protobuf:"varint,16,opt,name=isRepeatedGuest,proto3" json:"isRepeatedGuest,omitempty"`
	PreviousCancellations       int64  `protobuf:"varint,17,opt,name=previousCancellations,proto3" json:"previousCancellations,omitempty"`
	PreviousBookingsNotCanceled int64  `protobuf:"varint,18,opt,name=previousBookingsNotCanceled,proto3" json:"previousBookingsNotCanceled,omitempty"`
	ReservedRoomId              int64  `protobuf:"varint,19,opt,name=reservedRoomId,proto3" json:"reservedRoomId,omitempty"`
	AssignedRoomId              int64  `protobuf:"varint,20,opt,name=assignedRoomId,proto3" json:"assignedRoomId,omitempty"`
	BookingChanges              int64  `protobuf:"varint,21,opt,name=bookingChanges,proto3" json:"bookingChanges,omitempty"`
	DepositType                 string `protobuf:"bytes,22,opt,name=depositType,proto3" json:"depositType,omitempty"`
	Agent                       string `protobuf:"bytes,23,opt,name=agent,proto3" json:"agent,omitempty"`
	Company                     string `protobuf:"bytes,24,opt,name=company,proto3" json:"company,omitempty"`
	DaysInWaitingList           int64  `protobuf:"varint,25,opt,name=daysInWaitingList,proto3" json:"daysInWaitingList,omitempty"`
	CustomerType                string `protobuf:"bytes,26,opt,name=customerType,proto3" json:"customerType,omitempty"`
	Adr                         int64  `protobuf:"varint,27,opt,name=adr,proto3" json:"adr,omitempty"`
	RequiredCarParkingSpaces    int64  `protobuf:"varint,28,opt,name=requiredCarParkingSpaces,proto3" json:"requiredCarParkingSpaces,omitempty"`
	TotalOfSpecialRequests      int64  `protobuf:"varint,29,opt,name=totalOfSpecialRequests,proto3" json:"totalOfSpecialRequests,omitempty"`
}

func (x *Booking) Reset() {
	*x = Booking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Booking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Booking) ProtoMessage() {}

func (x *Booking) ProtoReflect() protoreflect.Message {
	mi := &file_ml_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Booking.ProtoReflect.Descriptor instead.
func (*Booking) Descriptor() ([]byte, []int) {
	return file_ml_proto_rawDescGZIP(), []int{1}
}

func (x *Booking) GetHotel() string {
	if x != nil {
		return x.Hotel
	}
	return ""
}

func (x *Booking) GetLeadtime() int64 {
	if x != nil {
		return x.Leadtime
	}
	return 0
}

func (x *Booking) GetArrivalDateYear() int64 {
	if x != nil {
		return x.ArrivalDateYear
	}
	return 0
}

func (x *Booking) GetArrivalDateMonth() int64 {
	if x != nil {
		return x.ArrivalDateMonth
	}
	return 0
}

func (x *Booking) GetArrivalDateWeekNumber() int64 {
	if x != nil {
		return x.ArrivalDateWeekNumber
	}
	return 0
}

func (x *Booking) GetArrivalDayOfMonth() int64 {
	if x != nil {
		return x.ArrivalDayOfMonth
	}
	return 0
}

func (x *Booking) GetStaysInWeekendNights() int64 {
	if x != nil {
		return x.StaysInWeekendNights
	}
	return 0
}

func (x *Booking) GetStaysInWeekNights() int64 {
	if x != nil {
		return x.StaysInWeekNights
	}
	return 0
}

func (x *Booking) GetAdults() int64 {
	if x != nil {
		return x.Adults
	}
	return 0
}

func (x *Booking) GetChildren() int64 {
	if x != nil {
		return x.Children
	}
	return 0
}

func (x *Booking) GetBabies() int64 {
	if x != nil {
		return x.Babies
	}
	return 0
}

func (x *Booking) GetMeal() string {
	if x != nil {
		return x.Meal
	}
	return ""
}

func (x *Booking) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Booking) GetMarketSegment() string {
	if x != nil {
		return x.MarketSegment
	}
	return ""
}

func (x *Booking) GetDistributionChannel() string {
	if x != nil {
		return x.DistributionChannel
	}
	return ""
}

func (x *Booking) GetIsRepeatedGuest() bool {
	if x != nil {
		return x.IsRepeatedGuest
	}
	return false
}

func (x *Booking) GetPreviousCancellations() int64 {
	if x != nil {
		return x.PreviousCancellations
	}
	return 0
}

func (x *Booking) GetPreviousBookingsNotCanceled() int64 {
	if x != nil {
		return x.PreviousBookingsNotCanceled
	}
	return 0
}

func (x *Booking) GetReservedRoomId() int64 {
	if x != nil {
		return x.ReservedRoomId
	}
	return 0
}

func (x *Booking) GetAssignedRoomId() int64 {
	if x != nil {
		return x.AssignedRoomId
	}
	return 0
}

func (x *Booking) GetBookingChanges() int64 {
	if x != nil {
		return x.BookingChanges
	}
	return 0
}

func (x *Booking) GetDepositType() string {
	if x != nil {
		return x.DepositType
	}
	return ""
}

func (x *Booking) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

func (x *Booking) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Booking) GetDaysInWaitingList() int64 {
	if x != nil {
		return x.DaysInWaitingList
	}
	return 0
}

func (x *Booking) GetCustomerType() string {
	if x != nil {
		return x.CustomerType
	}
	return ""
}

func (x *Booking) GetAdr() int64 {
	if x != nil {
		return x.Adr
	}
	return 0
}

func (x *Booking) GetRequiredCarParkingSpaces() int64 {
	if x != nil {
		return x.RequiredCarParkingSpaces
	}
	return 0
}

func (x *Booking) GetTotalOfSpecialRequests() int64 {
	if x != nil {
		return x.TotalOfSpecialRequests
	}
	return 0
}

type IsCanceledResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Predictions []bool `protobuf:"varint,1,rep,packed,name=predictions,proto3" json:"predictions,omitempty"`
}

func (x *IsCanceledResultResponse) Reset() {
	*x = IsCanceledResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsCanceledResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCanceledResultResponse) ProtoMessage() {}

func (x *IsCanceledResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCanceledResultResponse.ProtoReflect.Descriptor instead.
func (*IsCanceledResultResponse) Descriptor() ([]byte, []int) {
	return file_ml_proto_rawDescGZIP(), []int{2}
}

func (x *IsCanceledResultResponse) GetPredictions() []bool {
	if x != nil {
		return x.Predictions
	}
	return nil
}

type Prediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCanceled bool `protobuf:"varint,1,opt,name=IsCanceled,proto3" json:"IsCanceled,omitempty"`
}

func (x *Prediction) Reset() {
	*x = Prediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ml_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prediction) ProtoMessage() {}

func (x *Prediction) ProtoReflect() protoreflect.Message {
	mi := &file_ml_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prediction.ProtoReflect.Descriptor instead.
func (*Prediction) Descriptor() ([]byte, []int) {
	return file_ml_proto_rawDescGZIP(), []int{3}
}

func (x *Prediction) GetIsCanceled() bool {
	if x != nil {
		return x.IsCanceled
	}
	return false
}

var File_ml_proto protoreflect.FileDescriptor

var file_ml_proto_rawDesc = []byte{
	0x0a, 0x08, 0x6d, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x6d, 0x6c, 0x22, 0x39,
	0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x6c, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xed, 0x08, 0x0a, 0x07, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c,
	0x65, 0x61, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x72, 0x72, 0x69, 0x76,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x72, 0x72,
	0x69, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x34, 0x0a,
	0x15, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x57, 0x65, 0x65, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x61,
	0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x61, 0x79, 0x4f, 0x66, 0x4d, 0x6f, 0x6e, 0x74,
	0x68, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x57, 0x65, 0x65, 0x6b,
	0x65, 0x6e, 0x64, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x14, 0x73, 0x74, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x4e,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x79, 0x73, 0x49, 0x6e,
	0x57, 0x65, 0x65, 0x6b, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x11, 0x73, 0x74, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x4e, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x62, 0x69, 0x65,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x61, 0x62, 0x69, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x65, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x24, 0x0a,
	0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x73, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x4e, 0x6f, 0x74, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1b, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x4e, 0x6f, 0x74, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69,
	0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x64, 0x61,
	0x79, 0x73, 0x49, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x61, 0x64, 0x72, 0x12, 0x3a, 0x0a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x43, 0x61, 0x72, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x43, 0x61, 0x72, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4f, 0x66, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x3c, 0x0a, 0x18, 0x49, 0x73, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2c, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x65, 0x64, 0x32, 0x4a, 0x0a, 0x02, 0x4d, 0x6c, 0x12, 0x44, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x2e,
	0x6d, 0x6c, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x6c, 0x2e, 0x49, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x70, 0x62, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ml_proto_rawDescOnce sync.Once
	file_ml_proto_rawDescData = file_ml_proto_rawDesc
)

func file_ml_proto_rawDescGZIP() []byte {
	file_ml_proto_rawDescOnce.Do(func() {
		file_ml_proto_rawDescData = protoimpl.X.CompressGZIP(file_ml_proto_rawDescData)
	})
	return file_ml_proto_rawDescData
}

var file_ml_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ml_proto_goTypes = []interface{}{
	(*BookingRequest)(nil),           // 0: ml.BookingRequest
	(*Booking)(nil),                  // 1: ml.Booking
	(*IsCanceledResultResponse)(nil), // 2: ml.IsCanceledResultResponse
	(*Prediction)(nil),               // 3: ml.Prediction
}
var file_ml_proto_depIdxs = []int32{
	1, // 0: ml.BookingRequest.bookings:type_name -> ml.Booking
	0, // 1: ml.Ml.GetPredictions:input_type -> ml.BookingRequest
	2, // 2: ml.Ml.GetPredictions:output_type -> ml.IsCanceledResultResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ml_proto_init() }
func file_ml_proto_init() {
	if File_ml_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ml_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Booking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsCanceledResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ml_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ml_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ml_proto_goTypes,
		DependencyIndexes: file_ml_proto_depIdxs,
		MessageInfos:      file_ml_proto_msgTypes,
	}.Build()
	File_ml_proto = out.File
	file_ml_proto_rawDesc = nil
	file_ml_proto_goTypes = nil
	file_ml_proto_depIdxs = nil
}
